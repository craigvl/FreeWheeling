@model FreeWheeling.UI.Models.EditGroupModel
@{
    ViewBag.Title = "Edit bunch";
}
<div class="row">
    @Html.ActionLink(" ", "Index", "Group", null, new { @style = "background-color: #FFF; color: #333333;", @class = "glyphicon glyphicon-chevron-left", onclick = "ShowProgress();" })
</div>
<p></p>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="row">

        <div class="btn-group btn-block col-xs-12 col-md-3 col-sm-6" style="margin-bottom:5px;width:100%;">
            <span class="btn btn-default btn-block"> Edit bunch </span>
        </div>
        <div >
            <div ><span class="RequiredField">*&nbsp;</span><b>Bunch Name:</b></div>
            <div >
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
            </div>
            <div>
                <p></p>
                <div><span class="RequiredField">*&nbsp;</span><b>Location:</b></div>
                @Html.DropDownListFor(
             x => x.LocationsId,
    new SelectList(
        Model.Locations.ToList().Select(
                     x => new { Value = x.id, Text = x.Name }
        ),
        "Value",
                 "Text", Model.LocationsId
    ), "-- Group Location --", new { @class = "form-control" }
)
                <p></p>
            </div>
            @if (Model.IsOneOff)
            {
                <div><b>Day:</b></div>
                <div>                 
                    @Html.EditorFor(m => m.Day)
                    @Html.ValidationMessageFor(m => m.Day)
                  @* @Html.TextBox("Date", String.Format("{0:dd/MM/yyyy}", Model.Date ))*@                                 
                </div>
                <div><b>Month:</b></div>
                <div>
                    @Html.EditorFor(m => m.Month)
                    @Html.ValidationMessageFor(m => m.Month)
                    @* @Html.TextBox("Date", String.Format("{0:dd/MM/yyyy}", Model.Date ))*@
                </div>

                <div><b>Year:</b></div>
                <div>
                    @Html.EditorFor(m => m.Year)
                    @Html.ValidationMessageFor(m => m.Year)
                    @* @Html.TextBox("Date", String.Format("{0:dd/MM/yyyy}", Model.Date ))*@
                </div>
            }
            else
            {
            <div><b>Days Of Week</b></div>
            <div>
                @for (int i = 0; i < Model.DaysOfWeek.Count; i++)
                {
                    <div>
                        @Html.HiddenFor(x => x.DaysOfWeek[i].Name)
                        @Html.CheckBoxFor(x => x.DaysOfWeek[i].Checked, new { @disabled = "disabled" })
                        @Html.LabelFor(x => x.DaysOfWeek[i].Checked, Model.DaysOfWeek[i].Name)
                    </div>
                }
            </div>
            }
            <hr />
            <div><b>Private</b></div>
            <div>@Html.CheckBoxFor(model => model.IsPrivate)</div>
            <hr />
            <div><span class="RequiredField">*&nbsp;</span><b>Your name</b></div>
            <div>
                @Html.TextBoxFor(model => model.CreatorName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CreatorName)
            </div>
            <p></p>
            <div><b>Time</b></div>
            <hr />           
            <div><span class="RequiredField">*&nbsp;</span><b>Hour (24 Hour)</b></div>
            <div>
                @Html.TextBoxFor(model => model.Hour, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Hour)
            </div>
            <p></p>
            <div><span class="RequiredField">*&nbsp;</span><b>Minute</b></div>
            <div>
                @Html.TextBoxFor(model => model.Minute, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Minute)
            </div>
            <p></p>
            <div><span class="RequiredField">*&nbsp;</span><b>Start Location</b></div>

            <div>
                @Html.TextBoxFor(model => model.StartLocation, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StartLocation)
            </div>
            <p></p>
            <div><b>Description</b></div>
            <div>
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Description)
            </div>
            <p></p>
            <div>
                <p></p>
                <input onclick="ShowProgress();" id="btnSubmit" class="btn btn-default" type="submit" value="Update" />
                @Html.ActionLink("Delete", "DeleteGroup", "Group", new { GroupId = @Model.GroupId }, new { @class = "btn btn-default", onclick = "ShowProgress();" })
            </div>
            </div>
        </div>
}
<p></p>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
 
    <script type="text/javascript">
        jQuery(document).ready(function () {
            HideProgress();
        });
        $("form").submit(function () {
            if (!$(this).valid()) {
                HideProgress();
            }
            else {

            }
        });
    </script>
}