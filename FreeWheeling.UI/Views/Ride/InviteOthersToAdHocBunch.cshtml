@model FreeWheeling.UI.Models.InviteOthersToAdHocBunchModel
@{
    ViewBag.Title = "Edit Ad Hoc bunch";
}

<div class="row">
    @Html.ActionLink(" ", "ViewAdHocRide", "Ride", new { adhocrideid = @Model.adhocrideid }, new { @class = "glyphicon glyphicon-chevron-left", @style = "background-color: #FFF; color: #333333;", onclick = "ShowProgress();" })

<p></p>

    <div class="btn-group btn-block col-xs-12 col-md-3 col-sm-6" style="margin-bottom:5px;width:100%;">
        <span class="btn btn-default btn-block">
            Invite Others : @Model.Name :
            Date: @Model.RideDate
        </span>
 </div>
</div>
<p></p>
<p>Hit the <b>Select a person</b> button to invite your first person.</p><p><b>Note:</b> Hit the select a person button each time you wish to add another person to this random bunch.</p>
<p>When done hit the Send Invites button.</p>
<div id="templated">
    <hr />
    @Html.HiddenFor(model => model.adhocrideid, new { @id = "RideIdHidden" })
    <table>
        <tbody data-bind="template: { name: 'userRowTemplate', foreach: usersLines }"></tbody>
    </table>
    <script type="text/html" id="userRowTemplate">
        <tr>
            <td>Enter Bunchy user name or a valid email address <p></p>
                <div data-bind="validationElement: UserName">
                    <input placeholder="Bunchy username or email" class="form-control" id="InviteUser" data-bind="value: UserName, valueUpdate:'blur'" />
                </div>
                    <p></p>
                    Hit Select a user again to invite another user!
                    <p></p>
            </td>
        </tr>
    </script>
    <p></p>
    <span><button class="btn btn-default btn-sm" data-bind="click: addUser">Select a person</button></span>
    <span><input class="btn btn-default btn-sm" onclick="ShowProgress();" data-bind="click: save" id="btnSubmit" type="submit" value="Send Invites" /></span>
</div>

<div>
    <p></p>
</div>
@section Scripts {
@Scripts.Render("~/bundles/knockout")
@Scripts.Render("~/bundles/knockoutvalidation")
@Scripts.Render("~/bundles/jqueryui")
    <script type="text/javascript">

        $('body').on('focus', "#InviteUser", function () {
            $(this).autocomplete({
                source: '@Url.Action("GetNames","Group")'
            });
        })
        ko.validation.init({
            errorElementClass: 'has-error',
            errorMessageClass: 'help-block',
            decorateElement: true
        });
        function UserModel() {
            var self = this;
            self.UserName = ko.observable();
            //uncomment below when able to remove add user boxes
            //self.UserName = ko.observable().extend({ required: true });
        }

        var RideModel = function () {
            var self = this;
            self.usersLines = ko.observableArray([]);

            self.addUser = function () {

                self.usersLines.push(new UserModel);
            };

            self.save = function () {
                RideData = {
                    InviteUsers: self.usersLines(),
                    adhocrideid: $('#RideIdHidden').val()
                };

                var errors = ko.validation.group(RideData, { deep: true });
                errors.showAllMessages();
                if (errors().length > 0) {
                    // something went wrong - you should see the error messages
                    displayMessageAjax("Errors! Please fix and try again.", "error", "BottomCentre", "tempoarayMessage");
                    HideProgress();
                    return;
                }

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("InviteOthersToAdHocBunch", "Ride")',
                    data: ko.toJSON(RideData), //Convert the Observable Data into JSON
                    contentType: "application/json",
                    success: function (data, textStatus, jqXHR) {
                        var err = eval("(" + jqXHR.responseText + ")");
                        if (data.success == false) {
                            alert(err.Message);
                            HideProgress();
                        }

                        if (data.success == true) {
                            // alert(ko.toJSON(self));
                            HideProgress();
                            displayMessageAjax(data.message, "success", "BottomCentre", "tempoarayMessage");
                            setTimeout(function () {
                                window.location.href = '@Url.Action("AdHocList", "Ride")'
                            }, 1000); //will call the function after 2 secs.
                        }
                    },
                    error: function () {
                        alert("Failed");
                    }
                });
            };
        }
        $(document).ready(function () {
            $('#InviteUser').autocomplete({
                source: '@Url.Action("GetNames","Group")'
            });
            ko.applyBindings(new RideModel());
        })
    </script>
}