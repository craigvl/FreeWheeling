@model FreeWheeling.UI.Models.RideModelIndex
@using FreeWheeling.Domain.Entities
@using Microsoft.AspNet.Identity;

@{
    ViewBag.Title = "Index";
}
<p>
    <h2>
        @Model.Group.name
    </h2>
    @if (@Model.IsOwner)
    {
       
    }

</p>

@if (@Model.MapUrl != null)
{
    @Html.Raw(@Model.MapUrl)
}
<p></p>

@if (@Model.FromFavPage)
{

    @Html.ActionLink("Back <---", "Mybunches", "Group", null, new { @class = "btn btn-info" })
    
    if (@Model.NextRide != null)
    {

        @Html.ActionLink("Next bunch -->", "NextRide", "Ride", new { RideId = @Model.NextRide.id, Groupid = @Model.Group.id, PreviousRideID = @Model.Ride.id, FromFavPage = @Model.FromFavPage },
                                                      new { @class = "btn btn-default" })
        
    }

}
else
{
@Html.ActionLink("Back <---", "Index", "Group", null, new { @class = "btn btn-info" })
    
    if (@Model.NextRide != null)
    {

         @Html.ActionLink("Next bunch -->", "NextRide", "Ride", new { RideId = @Model.NextRide.id, Groupid = @Model.Group.id, PreviousRideID = @Model.Ride.id },
                                                      new { @class = "btn btn-default" })
        
    }
}


<hr />

<p>
    <h4>
    <span class="label label-primary">
     
       @Model.Ride.RideDate.ToLongDateString() @Html.Raw(",") @Model.Ride.RideDate.ToShortTimeString()
        </span>
        </h4>
    <hr />

        <h4><span class="label label-success">Peeps</span></h4>

@{
    
    foreach (Rider item in @Model.Riders)
    {     
        {
        switch (item.PercentKeen)
        {
        case "OnWay":
            <text>
                <p><span class="label label-success">@item.Name is on the way! Left <abbr class="timeago" title="@item.LeaveTime.ToString("MM/dd/yyyy HH:mm:ss")">@item.LeaveTime.ToString("MM/dd/yyyy HH:mm:ss")</abbr></span></p>
                
            </text>
            break;  // Always break each case
        case "Out":
            <text>
                <p><span class="label label-danger">@item.Name is a slacker!</span></p>
            </text>
            break;
        case "In":
            <text>
                <p><span class="label label-success">@item.Name is in!</span></p>
            </text>
            break;                   
    }
}        
       <p></p>       
    }
       
}
<hr />

<div>

    @if (@Model.Comments != null)
    {
    <h4><span class="label label-success">Comments</span> @Html.ActionLink("+", "AddComment", "Ride", new { RideId = @Model.Ride.id, Groupid = @Model.Group.id }, new { @class = "btn btn-success" })</h4>
        
    
        foreach (Comment item in Model.Comments)
    {
        
        @*@item.Date.ToShortDateString() @Html.Raw(" ")  @item.Date.ToShortTimeString() @Html.Raw(" ")*@
        @item.userName <text>: </text>
        @item.CommentText
        @:<p></p>
        
    }
      
        @Html.ActionLink(string.Concat("See all Comments (",@Model.CommentCount,")"), "SeeAllComments", "Ride", new { RideId = @Model.Ride.id, Groupid = @Model.Group.id }, new { @class = "btn btn-success" })
    
                 
    }

</div>



<hr />

<h4><span class="label label-success">Actions</span></h4>

    <p></p>
    @Html.ActionLink("I'm In!", "Attend", "Ride", new { RideId = @Model.Ride.id, commitment = "In", Groupid = @Model.Group.id }, new { @class = "btn btn-primary" })

    <p></p>
    @Html.ActionLink("I'm Out", "Attend", "Ride", new { RideId = @Model.Ride.id, Commitment = "Out", Groupid = @Model.Group.id }, new { @class = "btn btn-danger" })

    <p></p>
    @Html.ActionLink("On My Way!", "Attend", "Ride", new { RideId = @Model.Ride.id, Commitment = "OnWay", Groupid = @Model.Group.id }, new { @class = "btn btn-success" })
    
    <p></p>

@section scripts{
    @Scripts.Render("~/Scripts/jquery.timeago.js")
    <script>

        jQuery(document).ready(function () {
            jQuery("abbr.timeago").timeago();
        });

    </script>
}