@model FreeWheeling.UI.Models.AdHocViewModel
@using FreeWheeling.Domain.Entities

@{
    ViewBag.Title = "View Ad Hoc bunch";
}

@Html.Hidden("RideIdHidden", @Model.Ride.id)
<script src="http://js.pusher.com/2.1/pusher.min.js"></script>

@if (@Model.MapUrl != null)
{
    @Html.Raw(@Model.MapUrl)
}
<p></p>

@Html.ActionLink("Back <---", "AddHocList", "Ride", null, new { @class = "btn btn-info", onclick = "ShowProgress();" })

<h2>@Model.Ride.Name</h2>
<h3>@Model.Ride.RideDate.ToLongDateString()</h3>
<h3>Start Location: @Model.Ride.StartLocation</h3>
<h3>Start Time: @Model.RideDate.ToShortTimeString()</h3>
<h3>Description: @Model.Ride.Description</h3>
@if (@Model.IsOwner)
{

    @Html.ActionLink(" ", "EditAdHocRide", "Ride", new { adhocrideid = @Model.Ride.id }, new { @class = "glyphicon glyphicon-pencil", onclick = "ShowProgress();" })

}
<hr />

<h4><span class="label label-success">Keen<span id="@("KeenCountSpan"+@Model.Ride.id)">(@Model.KeenCount.ToString())</span></span></h4>
<div id="@("keendiv_" + @Model.Ride.id)">
    @{

        foreach (AdHocRider item in @Model.Riders)
        {

            {
                switch (item.PercentKeen)
                {
                    case "Out":
                        <text>
                            <p><span id="@("keen_" + @item.Name + @Model.Ride.id)" style="text-decoration:line-through;" class="label label-danger">@item.Name is Out</span></p>

                        </text>
                        break;  // Always break each case
                    case "OnWay":
                    <text>
                        <p><span id="@("keen_" + @item.Name + @Model.Ride.id)" class="label label-success">@item.Name is on the way! Left <abbr class="timeago" title="@item.LeaveTime.ToString("MM/dd/yyyy HH:mm:ss")">@item.LeaveTime.ToString("MM/dd/yyyy HH:mm:ss")</abbr></span></p>

                    </text>
                        break;  // Always break each case
                    case "In":
                    <text>
                        <p><span id="@("keen_" + @item.Name + @Model.Ride.id)" class="label label-success">@item.Name is in!</span></p>
                    </text>
                        break;
                }
            }
            <p></p>
        }

    }
    </div>
    <br />

    <div>
        <hr />
        @if (@Model.Comments != null)
        {
            <h4>
                <span class="label label-success">Comments <span id="@("CommentCountSpan" + @Model.Ride.id)">(@Model.CommentCount)</span></span>
            </h4>
            @:<div id="@("collapseCommentPanel" + @Model.Ride.id)">
        foreach (AdHocComment item in Model.Comments)
        {
            @item.userName <text>: </text>
            @item.CommentText
            @:<p></p>
        }

        @Html.ActionLink(string.Concat("See all Comments (", @Model.CommentCount, ")"), "SeeAllAdHocComments", "Ride", new { adhocrideid = @Model.Ride.id }, new { @class = "btn btn-success", onclick = "ShowProgress();" })

        }
    </div>
</div>

<div>

    @using (Html.BeginForm("AddAdHocComment", "Ride", new
        {
            adhocrideid = @Model.Ride.id
        }, FormMethod.Post))
    {
        <div class="input-group">
            @Html.TextBox("CommentString", null, new { @class = "form-control-C" })
            <span class="input-group-addon-C">
                <button class="btn btn-success" onclick="ShowProgress();" id="@("submit_" + @Model.Ride.id)" type="submit">Add comment</button>
            </span>
        </div>
    }

</div>

<hr />

<h4><span class="label label-success">Actions</span></h4>

<p></p>
@Html.ActionLink("I'm In!", "AttendAdHocRider", "Ride", new { adhocrideid = @Model.Ride.id, commitment = "In" }, new { @class = "btn btn-primary", onclick = "ShowProgress();" })

<p></p>
@Html.ActionLink("I'm Out", "AttendAdHocRider", "Ride", new { adhocrideid = @Model.Ride.id, Commitment = "Out" }, new { @class = "btn btn-danger", onclick = "ShowProgress();" })

<p></p>
@Html.ActionLink("On My Way!", "AttendAdHocRider", "Ride", new { adhocrideid = @Model.Ride.id, Commitment = "OnWay" }, new { @class = "btn btn-success", onclick = "ShowProgress();" })

<p></p>

<div class="loading" align="center">
    Loading. Please wait.<br />
    <br />
    <img src="~/Content/Images/loader.gif" alt="" />
</div>

@section scripts{
    @Scripts.Render("~/Scripts/jquery.timeago.js")
    <script>

        jQuery(document).ready(function () {

            var rideId = jQuery('#RideIdHidden').val();
            var pusher = new Pusher('dba777635636cbc16582');
            var channel = pusher.subscribe('BunchyRide' + rideId);

            channel.bind('New-CommentsAdHoc', function (data) {
                $("#collapseCommentPanel" + data.rideid).prepend("<p>" + data.username + " : " + data.message + "</p>");
                $("#CommentCountSpan" + data.rideid).html("(" + data.commentcount + ")");
                $("#CommentCountSpanSeeAll" + data.rideid).html("View All (" + data.commentcount + ")");
                $("#submit_" + data.rideid).val("");
            });

            channel.bind('You-InAdHoc', function (data) {
                //alert(data.message);
                if (data.message == 'In') {
                    $("#KeenCountSpan" + data.rideid).html("(" + data.keencount + ")");
                    var keenuser = "#keen_" + data.username + data.rideid;
                    if ($("#keen_" + data.username + data.rideid).length) {
                        $(keenuser).html(data.username + " is in!");
                        $(keenuser).attr('class', 'label label-success');
                        $(keenuser).css('text-decoration', 'none');
                    }
                    else {

                        $("#keendiv_" + data.rideid).prepend('<p><span id=keen_' + data.username + data.rideid + ' class="label label-success">' + data.username + ' is in!</span>');

                    }

                }

                if (data.message == 'Out') {
                    var keenuser = "#keen_" + data.username + data.rideid;
                    $("#KeenCountSpan" + data.rideid).html("(" + data.keencount + ")");
                    $(keenuser).html(data.username + " is Out!");
                    $(keenuser).attr('class', 'label label-danger');
                    $(keenuser).css("text-decoration", "line-through");
                }

                if (data.message == 'OnWay') {
                    var keenuser = "#keen_" + data.username + data.rideid;
                    $("#KeenCountSpan" + data.rideid).html("(" + data.keencount + ")");
                    $(keenuser).html(data.username + '<span class="label label-success">Left  <abbr class="timeago" title="' + moment(data.leavetime).format('MM/DD/YYYY HH:mm:ss') + '"> </abbr></span>');
                    $(keenuser).attr('class', 'label label-success');
                    $(keenuser).css("text-decoration", "none");
                    jQuery("abbr.timeago").timeago();
                }

            });

            jQuery("abbr.timeago").timeago();
        });

    </script>
}