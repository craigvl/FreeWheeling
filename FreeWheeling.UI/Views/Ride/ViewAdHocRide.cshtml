@model FreeWheeling.UI.Models.AdHocViewModel
@using FreeWheeling.Domain.Entities

@{
    ViewBag.Title = "View Ad Hoc bunch";
}

@if (@Model.MapUrl != null)
{
    @Html.Raw(@Model.MapUrl)
}
<p></p>

@Html.ActionLink("Back <---", "AddHocList", "Ride", null, new { @class = "btn btn-info", onclick = "ShowProgress();" })

<h2>@Model.Ride.Name</h2>
<h3>@Model.Ride.RideDate.ToLongDateString()</h3>
<h3>Start Location: @Model.Ride.StartLocation</h3>
<h3>Start Time: @Model.RideDate.ToShortTimeString()</h3>
<h3>Description: @Model.Ride.Description</h3>
@if (@Model.IsOwner)
{

    @Html.ActionLink(" ", "EditAdHocRide", "Ride", new { adhocrideid = @Model.Ride.id }, new { @class = "glyphicon glyphicon-pencil", onclick = "ShowProgress();" })

}
<hr />

<h4><span class="label label-success">Peeps</span></h4>

@{

    foreach (AdHocRider item in @Model.Riders)
    {

        {
            switch (item.PercentKeen)
            {
                case "OnWay":
                    <text>
                        <p><span class="label label-success">@item.Name is on the way! Left <abbr class="timeago" title="@item.LeaveTime.ToString("MM/dd/yyyy HH:mm:ss")">@item.LeaveTime.ToString("MM/dd/yyyy HH:mm:ss")</abbr></span></p>

                    </text>
                    break;  // Always break each case
                case "Out":
                <text>
                    <p><span class="label label-danger">@item.Name is a slacker!</span></p>
                </text>
                    break;
                case "In":
                <text>
                    <p><span class="label label-success">@item.Name is in!</span></p>
                </text>
                    break;
            }
        }
        <p></p>
    }

}
<br />

<div>
    <hr />
    @if (@Model.Comments != null)
    {
        <h4>
            <span class="label label-success">Comments</span>
            @Html.ActionLink("+", "AddAdHocComment", "Ride", new { adhocrideid = @Model.Ride.id }, new { @class = "btn btn-success", onclick = "ShowProgress();" })


        </h4>

        foreach (AdHocComment item in Model.Comments)
        {

            @*@item.Date.ToShortDateString() @Html.Raw(" ")  @item.Date.ToShortTimeString() @Html.Raw(" ")*@
            @item.userName <text>: </text>
            @item.CommentText
            @:<p></p>


        }

        @Html.ActionLink(string.Concat("See all Comments (", @Model.CommentCount, ")"), "SeeAllAdHocComments", "Ride", new { adhocrideid = @Model.Ride.id }, new { @class = "btn btn-success", onclick = "ShowProgress();" })

    }

</div>


<hr />

<h4><span class="label label-success">Actions</span></h4>

<p></p>
@Html.ActionLink("I'm In!", "AttendAdHocRider", "Ride", new { adhocrideid = @Model.Ride.id, commitment = "In" }, new { @class = "btn btn-primary", onclick = "ShowProgress();" })

<p></p>
@Html.ActionLink("I'm Out", "AttendAdHocRider", "Ride", new { adhocrideid = @Model.Ride.id, Commitment = "Out" }, new { @class = "btn btn-danger", onclick = "ShowProgress();" })

<p></p>
@Html.ActionLink("On My Way!", "AttendAdHocRider", "Ride", new { adhocrideid = @Model.Ride.id, Commitment = "OnWay" }, new { @class = "btn btn-success", onclick = "ShowProgress();" })

<p></p>

<div class="loading" align="center">
    Loading. Please wait.<br />
    <br />
    <img src="~/Content/Images/loader.gif" alt="" />
</div>

@section scripts{
    @Scripts.Render("~/Scripts/jquery.timeago.js")
    <script>

        jQuery(document).ready(function () {
            jQuery("abbr.timeago").timeago();
        });

    </script>
}