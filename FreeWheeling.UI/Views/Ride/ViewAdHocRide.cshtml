@model FreeWheeling.UI.Models.AdHocViewModel
@using FreeWheeling.Domain.Entities
@using Microsoft.AspNet.Identity;

@{
    ViewBag.Title = "View Ad Hoc bunch";
}

@Html.Hidden("RideIdHidden", @Model.Ride.id)
@Html.Hidden("RideUserNameHidden", User.Identity.GetUserName())
@Html.Hidden("CommentCount", @Model.CommentCount)
@Html.Hidden("KeenCount", @Model.KeenCount)

@if (@Model.MapUrl != null)
{
    @Html.Raw(@Model.MapUrl)
}
<p></p>

@Html.ActionLink(" ", "Index", "Group", null, new { @class = "glyphicon glyphicon-chevron-left", @style = "background-color: #FFF; color: #333333;", onclick = "ShowProgress();" })


<h4>@Model.Ride.Name</h4>
<h4>@Model.Ride.RideDate.ToLongDateString()</h4>
<h4>Start Location: @Model.Ride.StartLocation</h4>
<h4>Start Time: @Model.RideDate.ToShortTimeString()</h4>
<h4>Description: @Model.Ride.Description</h4>
@if (@Model.IsOwner)
{
    @Html.ActionLink(" ", "EditAdHocRide", "Ride", new { adhocrideid = @Model.Ride.id }, new { @class = "glyphicon glyphicon-pencil", onclick = "ShowProgress();" })
}
<hr />
<div class="row">
    <div class="col-xs-8 col-md-11 col-sm-10">
        <a style="background-color: #FFF; color: #333333;" data-toggle="collapse" href="" class="">Keen</a>
        <a style="background-color: #FFF; color: #333333;" id="@("KeenCountSpan" + @Model.Ride.id)">(@Model.KeenCount.ToString())</a>
    </div>
</div>
<div id="@("keendiv_" + @Model.Ride.id)">
    @{
        foreach (AdHocRider item in @Model.Riders)
        {
            {
                switch (item.PercentKeen)
                    {
                        case "Out":
                        <text>
                           <p><span id="@("keen_" + @item.Name + @Model.Ride.id)" style="" class="">@item.Name<span style="padding-left:5px;" class="glyphicon glyphicon-thumbs-down"></span></span></p>
                        </text>
                            break;  // Always break each case
                        case "OnWay":
                        <text>
                            <p><span id="@("keen_" + @item.Name + @Model.Ride.id)" class="">@item.Name Left <abbr class="timeago" title="@item.LeaveTime.ToString("MM/dd/yyyy HH:mm:ss")">@item.LeaveTime.ToString("MM/dd/yyyy HH:mm:ss")</abbr></span></p>
                        </text>
                            break;  // Always break each case
                        case "In":
                        <text>
                            <p><span id="@("keen_" + @item.Name + @Model.Ride.id)" class="">@item.Name <span style="padding-left:5px;" class="glyphicon glyphicon-thumbs-up"></span></span></p>
                        </text>
                        break;
                    }
            }
        }
    }
    </div>
<div>
    @if (@Model.Comments != null)
    {
        <div class="row">
            <div class="col-xs-8 col-md-11 col-sm-10">
                Comments
                <a style="background-color: #FFF; color: #333333;" id="@("CommentCountSpan" + @Model.Ride.id)">(@Model.CommentCount)</a>
            </div>
        </div>
        @:<div id="@("collapseCommentPanel" + @Model.Ride.id)">
            foreach (AdHocComment item in Model.Comments)
            {
                <div class="row">
                    <div class="col-xs-8 col-md-11 col-sm-10">
                        @item.userName
                        @item.CommentText
                    </div>
                </div>
            }
            @Html.ActionLink(string.Concat("View all (", @Model.CommentCount, ")"), "SeeAllAdHocComments", "Ride",
        new
        {
            adhocrideid = @Model.Ride.id
        },
        new { @class = "btn btn-default", onclick = "ShowProgress();", id = string.Concat("CommentCountSpanSeeAll", @Model.Ride.id.ToString()) })

    }
</div>
</div>

<div>
    @using (Ajax.BeginForm("AddAdHocComment", "Ride", new
                {
                    adhocrideid = @Model.Ride.id
                }, new AjaxOptions
        {
            HttpMethod = "Post",
            OnSuccess = "CommentComplete",
            OnBegin = "ShowProgress"
        }))
    {
        <div class="input-group">
            @Html.TextBox("CommentString", null, new { @class = "form-control", id = "CommentStringFirst" })
            <span >
                <button class="btn btn-default" id="@("submit_First")" type="submit">Add comment</button>
            </span>
        </div>
    }

</div>
<hr />
<h4><span class="label label-success">You in?</span></h4>

@Ajax.ActionLink("I'm In!", "AttendAdHocRider",
                    new { adhocrideid = @Model.Ride.id, commitment = "In" },
                 new AjaxOptions
                 {
                     HttpMethod = "POST",
                     OnSuccess = "KeenComplete",
                     OnBegin = "ShowProgress"
                 },
                 new
                 {
                     @class = "btn btn-primary",
                     onclick = "ShowProgress();",
                     @id = "InFirst"
                 })

@Ajax.ActionLink("I'm Out!", "AttendAdHocRider",
                    new { adhocrideid = @Model.Ride.id, commitment = "Out" },
                 new AjaxOptions
                 {
                     HttpMethod = "POST",
                     OnSuccess = "KeenComplete",
                     OnBegin = "ShowProgress"
                 },
                      new
                      {
                          @class = "btn btn-danger",
                          onclick = "ShowProgress();",
                          @id = "OutFirst"
                      })

@Ajax.ActionLink("On My Way!", "AttendAdHocRider",
                         new { adhocrideid = @Model.Ride.id, commitment = "OnWay" },
                 new AjaxOptions
                 {
                     HttpMethod = "POST",
                     OnSuccess = "KeenComplete",
                     OnBegin = "ShowProgress"
                 },
                 new
                 {
                     @class = "btn btn-success",
                     onclick = "ShowProgress();",
                     @id = "OnWayFirst"
                 })

<p></p>

<div id="Invite_Users_First">
    @Html.ActionLink("Invite Users", "InviteOthersToAdHocBunch", "Ride",
        new
        {
            adhocrideid = @Model.Ride.id
        },
        new { @class = "btn btn-success", onclick = "ShowProgress();", id = "InviteFirst" })
</div>
@section scripts{
    @Scripts.Render("~/Scripts/jquery.timeago.js")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/azuremobile")
    @Scripts.Render("~/bundles/pusher")
    <script>
        var socketId = null;

        function KeenComplete(data) {
            HideProgress();
            //Keen
            var client = new WindowsAzure.MobileServiceClient(
                     "http://bunchydev.azure-mobile.net/",
                     "HIdMfCPoYsHPanowdOvYsYOnmbZbsq45"
                      );

            var item = {
                text: data.message,
                bunchid: data.rideid,
                username: data.username,
                keencount: data.keencount,
                leavetime: data.leavetime,
                socket_id: socketId
            };
            client.getTable("Keenadhoc").insert(item);
            $("form #submit_AdHocComment").val("");     
            UpdateKeenActions(data.message, data.rideid, data.keencount, data.username, data.leavetime);
        }

        function CommentComplete(data) {
            HideProgress();
            //Azure Mobile Storage
            //Comments

            var client = new WindowsAzure.MobileServiceClient(
                      "http://bunchydev.azure-mobile.net/",
                      "HIdMfCPoYsHPanowdOvYsYOnmbZbsq45"
                       );

            var item = {
                text: data.message,
                bunchid: data.rideid,
                username: data.username,
                commentcount: data.commentcount,
                socket_id: socketId
            };
            client.getTable("ItemAdHoc").insert(item);               
            UpdateCommentFields(data.message, data.rideid, data.username, data.commentcount);
        }

        jQuery(document).ready(function () {
            HideProgress();
            var rideId = jQuery('#RideIdHidden').val();
            var pusher = new Pusher('dba777635636cbc16582');
            var channel = pusher.subscribe('BunchyRide' + rideId);
            var userName = jQuery('#RideUserNameHidden').val();
            var commentCount = jQuery('#CommentCount').val();
            var keenCount = jQuery('#KeenCount').val();

            channel.bind('New-CommentsAdHoc', function (data) {
                UpdateCommentFieldsPusher(data.message, data.rideid, data.username, data.commentcount);
            });

            pusher.connection.bind('connected', function () {
                socketId = pusher.connection.socket_id;
            });

            channel.bind('You-InAdHoc', function (data) {
                UpdateKeenActionsPusher(data.message, data.rideid, data.keencount, data.username, data.leavetime);
            });

            jQuery("abbr.timeago").timeago();
        });

    </script>
}