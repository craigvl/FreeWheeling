@model FreeWheeling.UI.Models.SingleRideAndRandomRideViewModel
@using FreeWheeling.Domain.Entities
@using Microsoft.AspNet.Identity;
@* ///////////////////////////////NOTE//////////////////////////////////
    If you change this file then you should also change the ViewSingleRide.cshtml to match, Thanks!
////////////////////////////////////////////////////////////////////////////////////////////////// *@
@{
    ViewBag.Title = "View Ad Hoc bunch";
}

@Html.Hidden("RideIdHidden", @Model.RandomRide.id)
@Html.Hidden("RideUserNameHidden", User.Identity.GetUserName())
@Html.Hidden("CommentCount", @Model.CommentCount)
@Html.Hidden("KeenCount", @Model.KeenCount)
<p></p>
<div class="row" style="padding-left:10px;padding-right:10px;">
    <span>
        @Html.ActionLink(" ", "AdHocList", "Ride", null, new { @class = "glyphicon glyphicon-chevron-left", @style = "background-color: #FFF; color: #333333;", onclick = "ShowProgress();" })
    </span>
    <span class="pull-right">
        @if (@Model.IsOwner)
        {
            @Html.ActionLink(" ", "EditAdHocRide", "Ride", new { adhocrideid = @Model.RandomRide.id }, new {  @style = "background-color: #FFF; color: #333333;", @class = "pull-rigth glyphicon glyphicon-pencil", onclick = "ShowProgress();" })
        }
    </span>
</div>
<p></p>
<div class="row">
        <div class="btn-group btn-block col-xs-12 col-md-3 col-sm-6" style="margin-bottom:5px;width:100%;">
           <span class="btn btn-default btn-block">
               @Model.RandomRide.Name
               <span style="background-color:white;">
                </span>
             </span>
       </div>
 </div>
@if (@Model.MapUrl != null)
{
    <div class="row">
        <div class='panel-group'>
            <div class='panel panel-default'>
                <div class="SecondaryHeading panel-heading">
                    <div class="col-xs-10 col-md-11 col-sm-10">
                        Map
                    </div>
                    <div class="col-xs-1 col-md-1 col-sm-1">
                        <a class="glyphicon glyphicon glyphicon-plus" id="MapPanel" data-toggle="collapse" href="#CollapseMap"></a>
                    </div>
                </div>
                <div class='panel-collapse collapse out' id="CollapseMap">
                    @Html.Raw(@Model.MapUrl)
                </div>
            </div>
        </div>
    </div>
}
<p></p>
When: @Model.RandomRide.RideDate.ToLongDateString() @@ @Model.RideDate.ToShortTimeString()
<p></p>
Start Location: @Model.RandomRide.StartLocation
<p></p>
Description: @Model.RandomRide.Description
<p></p>
<div class="row">
    <div class="btn-group btn-block col-xs-12 col-md-3 col-sm-6" style="margin-bottom:5px;width:100%;">
        <span class="SecondaryHeading btn btn-block">Keen <span id="@("KeenCountSpan" + @Model.RandomRide.id)">(@Model.KeenCount.ToString())</span></span>
    </div>
</div>

    <div class="row">
        <div class="col-xs-8 col-md-11 col-sm-10" id="@("keendiv_" + @Model.RandomRide.id)">
            @{
                @Html.Partial("_RidersKeenRandomAndSingle", Model, new ViewDataDictionary { { "type", "random" } })
            }
        </div>
    </div>


<div class="row">
    <div class="btn-group btn-block col-xs-12 col-md-3 col-sm-6" style="margin-bottom:5px;width:100%;">
        <span class="SecondaryHeading btn btn-block">Comments <a id="@("CommentCountSpan" + @Model.RandomRide.id)"></a></span>
    </div>
</div>

    <div>
        @if (@Model.RandomComments != null)
        {
            @Html.Partial("_CommentsRandomAndSingle", Model, new ViewDataDictionary { { "type", "random" } })
        }
    </div>
<div class="row">
    <div class="btn-group btn-block col-xs-12 col-md-3 col-sm-6" style="margin-bottom:5px;width:100%;">
        <span class="SecondaryHeading btn btn-block">You in?</span>
    </div>
</div>


    @Html.Partial("_KeenActionsRandomAndSingle", Model, new ViewDataDictionary { { "type", "random" } })
    <p></p>
    <div id="Invite_Users_First">
        @Html.ActionLink("Invite Users", "InviteOthersToAdHocBunch", "Ride",
        new
        {
            adhocrideid = @Model.RandomRide.id
        },
        new { @class = "btn btn-success", onclick = "ShowProgress();", id = "InviteFirst" })
    </div>
    @section scripts{
        @Scripts.Render("~/Scripts/jquery.timeago.js")
        @Scripts.Render("~/bundles/jqueryval")
        @Scripts.Render("~/bundles/azuremobile")
        @Scripts.Render("~/bundles/pusher")
        <script>
            var socketId = null;

            function KeenCompleteFirst(data) {
                HideProgress();
                //Keen
                var client = new WindowsAzure.MobileServiceClient(
                         "http://bunchydev.azure-mobile.net/",
                         "HIdMfCPoYsHPanowdOvYsYOnmbZbsq45"
                          );

                var item = {
                    text: data.message,
                    bunchid: data.rideid,
                    username: data.username,
                    keencount: data.keencount,
                    leavetime: data.leavetime,
                    socket_id: socketId
                };
                client.getTable("Keenadhoc").insert(item);
                $("form #submit_AdHocComment").val("");
                UpdateKeenActions(data.message, data.rideid, data.keencount, data.username, data.leavetime);
            }

            function CommentComplete(data) {
                HideProgress();
                //Azure Mobile Storage
                //Comments

                var client = new WindowsAzure.MobileServiceClient(
                          "http://bunchydev.azure-mobile.net/",
                          "HIdMfCPoYsHPanowdOvYsYOnmbZbsq45"
                           );

                var item = {
                    text: data.message,
                    bunchid: data.rideid,
                    username: data.username,
                    commentcount: data.commentcount,
                    socket_id: socketId
                };
                client.getTable("ItemAdHoc").insert(item);
                UpdateCommentFields(data.message, data.rideid, data.username, data.commentcount);
            }

            jQuery(document).ready(function () {
                HideProgress();
                var rideId = jQuery('#RideIdHidden').val();
                var pusher = new Pusher('dba777635636cbc16582');
                var channel = pusher.subscribe('BunchyRide' + rideId);
                var userName = jQuery('#RideUserNameHidden').val();
                var commentCount = jQuery('#CommentCount').val();
                var keenCount = jQuery('#KeenCount').val();

                channel.bind('New-CommentsAdHoc', function (data) {
                    UpdateCommentFieldsPusher(data.message, data.rideid, data.username, data.commentcount);
                });

                pusher.connection.bind('connected', function () {
                    socketId = pusher.connection.socket_id;
                });

                channel.bind('You-InAdHoc', function (data) {
                    UpdateKeenActionsPusher(data.message, data.rideid, data.keencount, data.username, data.leavetime);
                });

                jQuery("abbr.timeago").timeago();

                MapCollapse();
            });

        </script>
    }
