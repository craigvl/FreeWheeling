@model FreeWheeling.UI.Models.ExternalLoginViewModel  
@using Microsoft.Owin.Security

<hr />
@{
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    if (loginProviders.Count() == 0)
    {
        <div>
            <p>There are no external authentication services configured. See <a href="http://go.microsoft.com/fwlink/?LinkId=313242">this article</a>
            for details on setting up this ASP.NET application to support logging in via external services.</p>
        </div>
    }
    else
    {
        string action = Model.Action;
        string returnUrl = Model.ReturnUrl;
        using (Html.BeginForm(action, "Account", new { ReturnUrl = returnUrl }))
        {
            @Html.AntiForgeryToken()
    <div id="socialLoginList">
       
            <div class="row">
                @foreach (AuthenticationDescription p in loginProviders)
                {

                    if (p.AuthenticationType == "Google")
                        {
                        <div class="col-xs-6">
                            <button type="submit" class="btn btn-block btn-social btn-google-plus" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account">@p.AuthenticationType<i class="fa fa-google-plus"></i></button>
                        </div>
                        }
                    if (p.AuthenticationType == "Facebook")
                        {
                        <div class="col-xs-6">
                            <button type="submit" class="btn btn-block btn-social btn-facebook" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account">@p.AuthenticationType<i class="fa fa-facebook"></i></button>
                        </div>
                        }            
                }
            </div>
            </div>
       
        }
    }
}